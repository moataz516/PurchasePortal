@using PurchasePortal.Web.Models.DTOs.Product
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@model List<ProductDto>

@{
    var httpContext = HttpContextAccessor.HttpContext;
    string filter = httpContext.Request.Query["filter"];
    string sortBy = httpContext.Request.Query["sortBy"];
    string catId = httpContext.Request.Query["catId"];
    string isDesc = httpContext.Request.Query["desc"];
}

<div class="container mt-4">
    <h2>Product Search</h2>
    <form asp-action="ProductsBySearch" asp-controller="Product" method="get" class="mb-4">
        <div class="row">
            <div class="col-md-3">
                    <label for="catId" class="form-label"></label>
                    <select name="catId" class="form-control">
                        <option value="" selected disabled>-- Search By Category --</option>
                        @foreach (var category in (SelectList)ViewData["Categories"])
                        {
                        <option value="@category.Value" selected="@(catId == category.Value ? true : false )">@category.Text</option>
                        }
                    </select>
            </div>
            <div class="col-md-3">
                <div class="mb-3">
                    <label for="sortBy">Sort by:</label>
                    <select id="sortBy" name="sortBy" class="form-control">
                        <option value="name" selected="@(sortBy == "name" ? true : false)"> Name </option>
                        <option value="price" selected="@(sortBy == "price" ? true : false)">Price</option>
                        <option value="stock" selected="@(sortBy == "stock" ? true : false)">Stock Quantity</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="mb-3">
                    <label for="filter" class="form-label">Filter</label>
                    <input class="form-control" type="text" id="filter" name="filter" placeholder="Filter" value="@filter">
                </div>
            </div>
            <div class="col-md-3">
                <div class="mb-3 form-check">
                    <input class="form-check-input" type="checkbox" id="desc" name="desc" checked="@isDesc">
                    <label class="form-check-label" for="desc">Descending</label>
                </div>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Search</button>
    </form>

    @if (Model != null && Model.Any())
    {
        <div class="row">
            @foreach (var product in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">@product.Description</p>
                            <p class="card-text">Price: @product.Price.ToString("C")</p>
                            <p class="card-text">Stock: @product.StockQuantity</p>
                            <!-- Add more details as needed -->
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p>No products found.</p>
    }
</div>